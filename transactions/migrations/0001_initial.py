# Generated by Django 5.2.4 on 2025-09-02 19:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("ingest", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("income", "Income"),
                            ("expense", "Expense"),
                            ("transfer", "Transfer"),
                            ("asset", "Asset"),
                            ("liability", "Liability"),
                            ("equity", "Equity"),
                        ],
                        default="expense",
                        max_length=30,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="transactions.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LearnedSubcat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(db_index=True, max_length=200)),
                ("count", models.PositiveIntegerField(default=0)),
                ("last_seen", models.DateField(auto_now=True)),
                (
                    "subcategory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transactions.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payoree",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "indexes": [
                    models.Index(fields=["name"], name="transaction_name_37acd9_idx")
                ],
                "constraints": [
                    models.UniqueConstraint(fields=("name",), name="unique_payoree")
                ],
            },
        ),
        migrations.CreateModel(
            name="LearnedPayoree",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(db_index=True, max_length=200)),
                ("count", models.PositiveIntegerField(default=0)),
                ("last_seen", models.DateField(auto_now=True)),
                (
                    "payoree",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transactions.payoree",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KeywordRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "keyword",
                    models.CharField(
                        help_text="Word or phrase that influences categorization",
                        max_length=100,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=100,
                        help_text="Higher numbers = higher priority (1-1000)",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by_user",
                    models.BooleanField(
                        default=True,
                        help_text="True if created by user, False if system default",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="keyword_rules",
                        to="transactions.category",
                    ),
                ),
                (
                    "subcategory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="keyword_subcategory_rules",
                        to="transactions.category",
                    ),
                ),
                (
                    "payoree",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional: Assign specific payoree for this keyword",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="keyword_rules",
                        to="transactions.payoree",
                    ),
                ),
            ],
            options={
                "ordering": ["-priority", "keyword"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source", models.CharField(max_length=255)),
                ("sheet_account", models.CharField(max_length=100)),
                ("date", models.DateField()),
                ("description", models.TextField()),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("account_type", models.CharField(max_length=50)),
                ("check_num", models.CharField(blank=True, max_length=50, null=True)),
                ("memo", models.TextField(blank=True, null=True)),
                (
                    "categorization_error",
                    models.CharField(
                        blank=True,
                        help_text="Describes why subcategory/payoree assignment failed",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "bank_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="ingest.financialaccount",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Primary category for this transaction",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transactions_in_category",
                        to="transactions.category",
                    ),
                ),
                (
                    "payoree",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="transactions.payoree",
                    ),
                ),
                (
                    "subcategory",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional subcategory - must belong to the specified category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions_in_subcategory",
                        to="transactions.category",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="transactions", to="transactions.tag"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RecurringSeries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount_cents", models.IntegerField(help_text="Amount in cents")),
                (
                    "amount_tolerance_cents",
                    models.IntegerField(
                        default=100, help_text="Tolerance for amount matching in cents"
                    ),
                ),
                (
                    "interval",
                    models.CharField(
                        choices=[
                            ("weekly", "Weekly"),
                            ("biweekly", "Biweekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        help_text="Recurrence interval",
                        max_length=20,
                    ),
                ),
                (
                    "confidence",
                    models.FloatField(
                        default=0.0, help_text="Confidence score for this pattern"
                    ),
                ),
                (
                    "first_seen",
                    models.DateField(
                        blank=True,
                        help_text="Date this pattern was first observed",
                        null=True,
                    ),
                ),
                (
                    "last_seen",
                    models.DateField(
                        blank=True,
                        help_text="Date this pattern was last observed",
                        null=True,
                    ),
                ),
                (
                    "next_due",
                    models.DateField(
                        blank=True, help_text="Next expected occurrence", null=True
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True, help_text="Whether this series is still active"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Additional notes about this series",
                    ),
                ),
                (
                    "payoree",
                    models.ForeignKey(
                        blank=True,
                        help_text="The payoree for this recurring series",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="transactions.payoree",
                    ),
                ),
                (
                    "seed_transaction",
                    models.ForeignKey(
                        blank=True,
                        help_text="The transaction that seeded this series",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="seeded_series",
                        to="transactions.transaction",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExcludedSimilarTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("excluded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "excluded_transaction",
                    models.ForeignKey(
                        help_text="The similar transaction to exclude",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="excluded_similar_target",
                        to="transactions.transaction",
                    ),
                ),
                (
                    "source_transaction",
                    models.ForeignKey(
                        help_text="The transaction being resolved",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="excluded_similar_source",
                        to="transactions.transaction",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["name"], name="transaction_name_6ba0ff_idx"),
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                fields=("parent", "name"), name="unique_subcategory_per_parent"
            ),
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                condition=models.Q(("parent__isnull", True)),
                fields=("name",),
                name="unique_top_level_category",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="learnedsubcat",
            unique_together={("key", "subcategory")},
        ),
        migrations.AlterUniqueTogether(
            name="learnedpayoree",
            unique_together={("key", "payoree")},
        ),
        migrations.AddIndex(
            model_name="keywordrule",
            index=models.Index(fields=["keyword"], name="kw_rule_keyword_idx"),
        ),
        migrations.AddIndex(
            model_name="keywordrule",
            index=models.Index(fields=["priority"], name="kw_rule_priority_idx"),
        ),
        migrations.AddIndex(
            model_name="keywordrule",
            index=models.Index(fields=["is_active"], name="kw_rule_active_idx"),
        ),
        migrations.AddConstraint(
            model_name="keywordrule",
            constraint=models.UniqueConstraint(
                fields=("keyword", "category", "subcategory", "payoree"),
                name="unique_keyword_rule",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["date", "amount", "description", "bank_account"],
                name="transaction_date_7d5da2_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="transaction",
            constraint=models.UniqueConstraint(
                fields=("date", "amount", "description", "bank_account"),
                name="unique_transaction",
            ),
        ),
        migrations.AddIndex(
            model_name="recurringseries",
            index=models.Index(
                fields=["payoree", "amount_cents"], name="recurring_payoree_amount_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="recurringseries",
            index=models.Index(
                fields=["next_due"], name="transaction_next_du_3ee9f9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="recurringseries",
            index=models.Index(fields=["active"], name="transaction_active_fcc8ae_idx"),
        ),
        migrations.AddIndex(
            model_name="excludedsimilartransaction",
            index=models.Index(
                fields=["source_transaction"], name="excl_sim_source_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="excludedsimilartransaction",
            index=models.Index(
                fields=["excluded_transaction"], name="excl_sim_target_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="excludedsimilartransaction",
            unique_together={("source_transaction", "excluded_transaction")},
        ),
    ]
