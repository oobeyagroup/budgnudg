# Generated by Django 5.2.4 on 2025-09-24 12:09

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("budgets", "0002_alter_budget_amount"),
        ("transactions", "0006_set_default_needs_level"),
    ]

    operations = [
        migrations.CreateModel(
            name="BudgetPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Budget plan name (e.g., 'Lean', 'Normal', 'Splurge')",
                        max_length=50,
                    ),
                ),
                ("year", models.PositiveIntegerField()),
                (
                    "month",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ]
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False, help_text="Whether this plan is currently active"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Optional description of this budget plan"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-year", "-month", "name"],
                "indexes": [
                    models.Index(
                        fields=["year", "month"], name="budgets_bud_year_4eb9d9_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="budgets_bud_is_acti_4d49ef_idx"
                    ),
                ],
                "unique_together": {("name", "year", "month")},
            },
        ),
        migrations.CreateModel(
            name="BudgetAllocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "needs_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("critical", "Critical"),
                            ("core", "Core"),
                            ("lifestyle", "Lifestyle"),
                            ("discretionary", "Discretionary"),
                            ("luxury", "Luxury"),
                            ("deferred", "Deferred"),
                        ],
                        help_text="Allocation applies to this needs level",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Allocation amount (positive for income, negative for expenses)",
                        max_digits=12,
                    ),
                ),
                (
                    "is_ai_suggested",
                    models.BooleanField(
                        default=False,
                        help_text="True if this allocation was auto-populated by AI",
                    ),
                ),
                (
                    "baseline_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Historical baseline used for AI suggestion",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("user_note", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Allocation applies to this category",
                        limit_choices_to={"parent__isnull": True},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transactions.category",
                    ),
                ),
                (
                    "payoree",
                    models.ForeignKey(
                        blank=True,
                        help_text="Allocation applies to this payoree",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transactions.payoree",
                    ),
                ),
                (
                    "recurring_series",
                    models.ForeignKey(
                        blank=True,
                        help_text="Connected recurring transaction series",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="transactions.recurringseries",
                    ),
                ),
                (
                    "subcategory",
                    models.ForeignKey(
                        blank=True,
                        help_text="Allocation applies to this subcategory",
                        limit_choices_to={"parent__isnull": False},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategory_allocations",
                        to="transactions.category",
                    ),
                ),
                (
                    "budget_plan",
                    models.ForeignKey(
                        help_text="Budget plan this allocation belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allocations",
                        to="budgets.budgetplan",
                    ),
                ),
            ],
            options={
                "ordering": ["budget_plan", "category__name"],
            },
        ),
        migrations.DeleteModel(
            name="Budget",
        ),
        migrations.AddIndex(
            model_name="budgetallocation",
            index=models.Index(
                fields=["budget_plan"], name="budgets_bud_budget__5da9ac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="budgetallocation",
            index=models.Index(
                fields=["category"], name="budgets_bud_categor_54365f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="budgetallocation",
            index=models.Index(
                fields=["subcategory"], name="budgets_bud_subcate_e85c85_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="budgetallocation",
            index=models.Index(
                fields=["payoree"], name="budgets_bud_payoree_1d5741_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="budgetallocation",
            unique_together={
                ("budget_plan", "category", "subcategory", "payoree", "needs_level")
            },
        ),
    ]
